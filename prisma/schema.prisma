// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id
  username String @unique
}

model Student {
  id        String   @id
  username  String   @unique
  name      String
  surname   String
  email     String?  @unique
  phone     String?  @unique
  address   String
  img       String?
  bloodType String
  sex       UserSex
  createdAt DateTime @default(now())
  birthday  DateTime

  attandances Attendance[]
  results     Result[]

  Parent   Parent? @relation(fields: [parentId], references: [id])
  parentId String?
  Class    Class?  @relation(fields: [classId], references: [id])
  classId  Int?
  Grade    Grade?  @relation(fields: [gradeId], references: [id])
  gradeId  Int?
}

model Teacher {
  id        String    @id
  username  String    @unique
  name      String
  surname   String
  email     String?   @unique
  phone     String?   @unique
  address   String
  img       String?
  bloodType String
  sex       UserSex
  createdAt DateTime  @default(now())
  birthday  DateTime
  subjects  Subject[]
  lessons   Lesson[]
  classes   Class[]
}

model Parent {
  id        String    @id
  username  String    @unique
  name      String
  surname   String
  email     String?   @unique
  phone     String    @unique
  address   String
  createdAt DateTime  @default(now())
  students  Student[]
}

model Grade {
  id    Int @id @default(autoincrement())
  level Int @unique

  student Student[]
  classes Class[]
}

model Class {
  id       Int    @id @default(autoincrement())
  name     String @unique
  capacity Int

  students      Student[]
  lessons       Lesson[]
  events        Event[]
  announcements Announcement[]

  supervisor   Teacher? @relation(fields: [supervisorId], references: [id])
  supervisorId String?
  Grade        Grade?   @relation(fields: [gradeId], references: [id])
  gradeId      Int?
}

model Subject {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  lessons   Lesson[]
  Teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId String?
}

model Lesson {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  day       Day
  startTime DateTime
  endTime   DateTime

  exams      Exam[]
  assigments Assignment[]
  attandance Attendance[]

  Subject   Subject? @relation(fields: [subjectId], references: [id])
  subjectId Int?
  Class     Class?   @relation(fields: [classId], references: [id])
  classId   Int?
  Teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId String?
}

model Exam {
  id        Int      @id @default(autoincrement())
  title     String
  startTime DateTime
  endTime   DateTime

  results Result[]

  Lesson   Lesson? @relation(fields: [lessonId], references: [id])
  lessonId Int?
}

model Assignment {
  id        Int      @id @default(autoincrement())
  title     String
  startDate DateTime
  dueDate   DateTime

  results Result[]

  Lesson   Lesson? @relation(fields: [lessonId], references: [id])
  lessonId Int?
}

model Result {
  id    Int @id @default(autoincrement())
  score Int

  Exam         Exam?       @relation(fields: [examId], references: [id])
  examId       Int?
  Assignment   Assignment? @relation(fields: [assignmentId], references: [id])
  assignmentId Int?
  Student      Student?    @relation(fields: [studentId], references: [id])
  studentId    String?
}

model Attendance {
  id        Int      @id @default(autoincrement())
  date      DateTime
  present   Boolean
  Student   Student? @relation(fields: [studentId], references: [id])
  studentId String?
  Lesson    Lesson?  @relation(fields: [lessonId], references: [id])
  lessonId  Int?
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime
  Class       Class?   @relation(fields: [classId], references: [id])
  classId     Int?
}

model Announcement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        DateTime
  Class       Class?   @relation(fields: [classId], references: [id])
  classId     Int?
}

enum UserSex {
  MALE
  FEMALE
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}
